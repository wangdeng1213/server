<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linksus.dao.LinksusWeiboMapper" >
  <resultMap id="LinksusWeibo" type="LinksusWeibo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="institution_id" property="institutionId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="INTEGER" />
    <result column="send_time" property="sendTime" jdbcType="INTEGER" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="TINYINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="pic_original_url" property="picOriginalUrl" jdbcType="VARCHAR" />
    <result column="pic_middle_url" property="picMiddleUrl" jdbcType="VARCHAR" />
    <result column="pic_thumb_url" property="picThumbUrl" jdbcType="VARCHAR" />
    <result column="music_url" property="musicUrl" jdbcType="VARCHAR" />
    <result column="video_url" property="videoUrl" jdbcType="VARCHAR" />
    <result column="author_id" property="authorId" jdbcType="BIGINT" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
    <result column="apply_status" property="applyStatus" jdbcType="CHAR" />
    <result column="publish_stauts" property="publishStauts" jdbcType="TINYINT" />
    <result column="publish_type" property="publishType" jdbcType="TINYINT" />
    <result column="content_type" property="contentType" jdbcType="CHAR" />
    <result column="to_file" property="toFile" jdbcType="TINYINT" />
    <result column="srcid" property="srcid" jdbcType="BIGINT" />
    <result column="srcurl" property="srcurl" jdbcType="VARCHAR" />
    <result column="MID" property="mid" jdbcType="BIGINT" />
    <result column="repost_count" property="repostCount" jdbcType="INTEGER" />
    <result column="comment_count" property="commentCount" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="BIGINT" />
    <result column="source_name" property="sourceName" jdbcType="VARCHAR" />
    <result column="current_url" property="currentUrl" jdbcType="VARCHAR" />
    <result column="publish_source" property="publishSource" jdbcType="SMALLINT" />	
	<result column="refer_id" property="referId" jdbcType="BIGINT" />
	<result column="errmsg" property="errmsg" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    id, institution_id, account_id, created_time, send_time, account_name, account_type, 
    content, pic_original_url, pic_middle_url, pic_thumb_url, music_url, video_url, author_id, 
    author_name, STATUS, apply_status, publish_stauts, publish_type, content_type, to_file, 
    srcid, srcurl, MID, repost_count, comment_count, source_id, source_name,current_url,publish_source,refer_id
  </sql>
  
  <update id="updateByPrimaryKey" parameterType="com.linksus.entity.LinksusWeibo" >
    update linksus_weibo
    set institution_id = #{institutionId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=INTEGER},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      pic_original_url = #{picOriginalUrl,jdbcType=VARCHAR},
      pic_middle_url = #{picMiddleUrl,jdbcType=VARCHAR},
      pic_thumb_url = #{picThumbUrl,jdbcType=VARCHAR},
      music_url = #{musicUrl,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=BIGINT},
      author_name = #{authorName,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=TINYINT},
      apply_status = #{applyStatus,jdbcType=CHAR},
      publish_stauts = #{publishStauts,jdbcType=TINYINT},
      publish_type = #{publishType,jdbcType=TINYINT},
      content_type = #{contentType,jdbcType=CHAR},
      to_file = #{toFile,jdbcType=TINYINT},
      srcid = #{srcid,jdbcType=BIGINT},
      srcurl = #{srcurl,jdbcType=VARCHAR},
      MID = #{mid,jdbcType=BIGINT},
      repost_count = #{repostCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=BIGINT},
      source_name = #{sourceName,jdbcType=VARCHAR},
      current_url = #{currentUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="getWeiboImmeSend"  resultMap="LinksusWeibo" parameterType="LinksusWeibo">
		  select 
		  <include refid="Base_Column_List" />
		  from linksus_weibo
		  WHERE STATUS = 1 AND publish_stauts=0 AND account_type=#{accountType}
		  order by id
		  limit #{startCount},#{pageSize}
	</select> 
	
	<select id="getCountByaccount"  resultType="java.lang.Integer" parameterType="java.lang.Long">
		  select 
		  count(*)
		  from linksus_weibo where account_id=#{accountId,jdbcType=BIGINT}
	</select>  
	  
	<!-- 新增  -->
	<update id="insertLinksusWeibo" parameterType="LinksusWeibo">
		INSERT INTO linksus_weibo(
		id,institution_id,account_id,created_time,send_time,account_name,account_type,content,pic_original_url,pic_middle_url,pic_thumb_url,music_url,video_url,author_id,author_name,STATUS,apply_status,publish_stauts,publish_type,content_type,to_file,srcid,srcurl,MID,repost_count,comment_count,source_id,source_name,current_url
		) VALUES(
		#{id:BIGINT},#{institutionId:BIGINT},#{accountId:BIGINT},#{createdTime:INTEGER},#{sendTime:INTEGER},#{accountName:VARCHAR},#{accountType:TINYINT},#{content:VARCHAR},#{picOriginalUrl:VARCHAR},#{picMiddleUrl:VARCHAR},#{picThumbUrl:VARCHAR},#{musicUrl:VARCHAR},#{videoUrl:VARCHAR},#{authorId:BIGINT},#{authorName:VARCHAR},#{status:TINYINT},#{applyStatus:CHAR},#{publishStauts:TINYINT},#{publishType:TINYINT},#{contentType:CHAR},#{toFile:TINYINT},#{srcid:BIGINT},#{srcurl:VARCHAR},#{mid:BIGINT},#{repostCount:INTEGER},#{commentCount:INTEGER},#{sourceId:BIGINT},#{sourceName:VARCHAR},#{currentUrl:VARCHAR}
		)
	</update>
	<select id="getWeiboRecordPrepare"  resultMap="LinksusWeibo" parameterType="LinksusWeibo">
		  select
		  <include refid="Base_Column_List" />
		  <![CDATA[
		  from linksus_weibo
		  WHERE STATUS = 1 AND publish_stauts=1
			AND send_time < unix_timestamp(TIMESTAMPADD(SECOND,86400,now()))
		  order by id
		  limit #{startCount},#{pageSize}
		 ]]>
	</select> 
	
	<select id="getWeiboImmeSendTrial"  resultMap="LinksusWeibo" parameterType="LinksusWeibo">
		  select 
		  <include refid="Base_Column_List" />
		  from linksus_weibo w
		  WHERE STATUS = 1 AND publish_stauts=0 
		  and exists (select 1 from linksus_task_trial_account a,linksus_appaccount b where b.appid = a.appid and account_type=b.type and w.account_id=b.id)
		  AND account_type=#{accountType}
		  order by id
		  limit #{startCount},#{pageSize}
	</select> 
	
	<select id="getWeiboRecordPrepareTrial"  resultMap="LinksusWeibo" parameterType="LinksusWeibo">
		  select
		  <include refid="Base_Column_List" />
		  <![CDATA[
		  from linksus_weibo w
		  WHERE STATUS = 1 AND publish_stauts=1
		    and exists (select 1 from linksus_task_trial_account a,linksus_appaccount b where b.appid = a.appid and account_type=b.type and w.account_id=b.id)
			AND send_time < unix_timestamp(TIMESTAMPADD(SECOND,86400,now()))
		  order by id
		  limit #{startCount},#{pageSize}
		 ]]>
	</select>
	
	<select id="getLinksusWeiboById"  resultMap="LinksusWeibo" parameterType="java.lang.Long">
		  select 
		  <include refid="Base_Column_List" />
		  from linksus_weibo where id=#{id,jdbcType=BIGINT}
	</select>  
	<!--  根据微博id 和微博类型判断微博是否存在 -->
		<select id="getLinksusWeiboByMap"  resultMap="LinksusWeibo" parameterType="java.util.Map">
		  select  MID as mid,repost_count as repostCount,comment_count as commentCount,account_type as accountType
		  from linksus_weibo where MID=#{mid} and account_type = #{weiboType,jdbcType=TINYINT}
	    </select> 
	<update id="updateSendWeiboSucc" parameterType="LinksusWeibo" >
     update linksus_weibo
        set STATUS=#{status},MID=#{mid},current_url = #{currentUrl},send_time=#{sendTime}
     where id = #{id}  
  </update>
  
  <update id="updateSendWeiboFailed" parameterType="LinksusWeibo" >
     update linksus_weibo set STATUS=2,errmsg=#{errmsg} where id = #{id}  
  </update>  
  
  <update id="deletePurchaseWeibo" parameterType="java.lang.Long" >
     delete linksus_weibo where id = #{value}  
  </update> 
  
  	<update id="updateSendWeiboCount" parameterType="LinksusWeibo" >
     update linksus_weibo
        set comment_count=#{commentCount,jdbcType=INTEGER},repost_count = #{repostCount,jdbcType=INTEGER}
     where mid = #{mid,jdbcType=BIGINT}  
  	</update>  
  
   <select id="getLinksusWeiboHasSend" parameterType="LinksusWeibo" resultMap="LinksusWeibo">
	   select  MID as mid,repost_count as repostCount,comment_count as commentCount,account_type as accountType
		  from linksus_weibo where STATUS=3 and account_type = #{accountType,jdbcType=TINYINT} order by id desc limit #{startCount},#{pageSize}
	</select> 
	
	<select id="getLinksusWeiboHasSendSuccess" resultType="LinksusWeibo">
	   select  institution_id as institutionId,send_time as sendTime,content as content
		  from linksus_weibo where STATUS=3 order by send_time ASC limit 1000
	</select>
	
	<select id="getLinksusWeiboHasSendSuccessCon" resultType="LinksusWeibo" parameterType="java.lang.Integer">
	   select  institution_id as institutionId,send_time as sendTime,content
		  from linksus_weibo where STATUS=3 and send_time > #{sendTime,jdbcType=INTEGER} order by send_time ASC limit 1000
	</select>  
	
	<update id="updatePurchaseWeiboFailed" parameterType="java.lang.Long" >
     update linksus_purchase_order_detail set status=12 where detail_id = #{value}  
  	</update>
  	
  	<update id="updatePurchaseWeiboSucc" parameterType="LinksusWeibo" >
     update linksus_purchase_order_detail
        set status=7,exe_price = price,exe_url=#{exe_url},exe_img=#{exe_img}
     where detail_id = #{detail_id}   
  	</update>
</mapper>