<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="  
	    http://www.springframework.org/schema/beans   
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
	    http://www.springframework.org/schema/tx   
	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
	    http://www.springframework.org/schema/context   
	    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	    
	   <bean id="clientHandler" class="com.linksus.mina.TlsClientHandler" />	

  <!-- The SSL configuration -->
  <bean id="keystoreFactory" class="org.apache.mina.filter.ssl.KeyStoreFactory">
    <property name="password" value="567890"/>
    <property name="dataUrl" value="classpath:config/ssl/client.jks"/>
  </bean>
  <bean id="keyStore" factory-bean="keystoreFactory" factory-method="newInstance"/>  

  <bean id="truststoreFactory" class="org.apache.mina.filter.ssl.KeyStoreFactory">
    <property name="password" value="567890"/>
    <property name="dataUrl" value="classpath:config/ssl/client.jks"/>
  </bean>
  <bean id="trustStore" factory-bean="truststoreFactory" factory-method="newInstance"/>  

  <!-- SSLContext to be used -->
  <bean id="sslContextFactory"  class="org.apache.mina.filter.ssl.SslContextFactory">
    <property name="protocol" value="TLS"/>    
    <property name="keyManagerFactoryAlgorithm" value="SunX509"/>
    <property name="keyManagerFactoryKeyStore"><ref local="keyStore"/></property>
    <property name="keyManagerFactoryKeyStorePassword" value="567890"/>    
    <property name="trustManagerFactoryAlgorithm" value="SunX509"/>
    <property name="trustManagerFactoryKeyStore"><ref local="trustStore"/></property>  
  </bean>
  <bean id="sslContext" factory-bean="sslContextFactory" factory-method="newInstance"/>   
  
  <bean id="sslFilter" class="org.apache.mina.filter.ssl.SslFilter">
    <constructor-arg ref="sslContext"/>
    <property name="useClientMode" value="true"/>
  </bean> 
  
  <!-- the IoFilters -->
  <bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter" />

  <bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter">
      <constructor-arg value="remoteAddress"/>
  </bean>  
 
   <bean id="codecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
    <constructor-arg>
      <bean class="com.linksus.mina.MyBufferCodecFactory" />
    </constructor-arg>
  </bean>
 
  <bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />
  
  <!-- The SSL filter chain. -->
  <bean id="sslFilterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
    <property name="filters">
      <map>
        <entry key="executor" value-ref="executorFilter"/>
        <entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter"/>
        <entry key="sslFilter" value-ref="sslFilter"/>
        <entry key="codecFilter" value-ref="codecFilter"/>
        <entry key="loggingFilter" value-ref="loggingFilter"/>
      </map>
    </property>
  </bean> 

  <bean id="ioConnectorWithSSL" class="org.apache.mina.transport.socket.nio.NioSocketConnector" scope="prototype" > 
  	<property name="handler" ref="clientHandler" />  
    <property name="filterChainBuilder" ref="sslFilterChainBuilder" />
  </bean>
</beans>  